{"version":3,"sources":["components/AboutPage.tsx","components/ComparePage.tsx","components/Footer.tsx","components/FooterAuthor.tsx","components/FooterCompany.tsx","components/Header.tsx","components/HeaderTitle.tsx","components/HistoryPage.tsx","components/LinkGroup.tsx","components/NavigationLink.tsx","components/ConversionInput.tsx","components/HomePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AboutPage","id","ComparePage","Footer","linkGroupProps","key","uuidv4","text","location","size","additionalClassNames","FooterCompany","company","content","className","LinkGroup","title","childrenLinkProps","additionalClasses","FooterAuthor","role","href","Header","HeaderTitle","HistoryPage","classesForLink","map","NavigationLink","exact","to","activeClassName","activeStyle","ConversionInput","initial","bitCoinValue","React","useState","cryptoValue","updateCryptoValue","initialCurrency","parseFloat","toString","currencyValue","updateCurrencyValue","name","type","value","onChange","e","newValue","target","test","newString","length","HomePage","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.647dd5e9.chunk.js","sourcesContent":["import React from 'react'\n\n\nexport default function AboutPage() {\n    return (\n        <main id='AboutPage'>\n            <h1> About Me :)</h1>\n        </main>\n    )\n}\n","import React from 'react'\n\nexport default function ComparePage() {\n    return (\n        <main id='ComparePage'>\n            <h1> Compare prices here.</h1>\n        </main>\n    )\n}\n","import React from 'react'\nimport { v4 as uuidv4 } from 'uuid';\n// import FooterAuthor from './FooterAuthor';\n// import FooterCompany from './FooterCompany';\n// import LinkGroup from './LinkGroup';\nimport { FooterAuthor, FooterCompany, LinkGroup } from './index';\n\n\nexport default function Footer() {\n    const linkGroupProps = [\n        {\n            key: uuidv4(),\n            text: 'Home',\n            location: '',\n            size: 'X-Small',\n            additionalClassNames: 'footer-link'\n        },\n        {\n            key: uuidv4(),\n            text: 'History',\n            location: 'history',\n            size: 'X-Small',\n            additionalClassNames: 'footer-link'\n        },\n        {\n            key: uuidv4(),\n            text: 'Compare',\n            location: 'compare',\n            size: 'X-Small',\n            additionalClassNames: 'footer-link'\n        },\n        {\n            key: uuidv4(),\n            text: 'About',\n            location: 'about',\n            size: 'X-Small',\n            additionalClassNames: 'footer-link'\n        },\n    ]\n    return (\n        <footer>\n            <FooterCompany \n                company='Cryptox' \n                content=''\n            />\n            <div className='footer-link-container'>\n                <LinkGroup\n                    title='Links'\n                    childrenLinkProps={linkGroupProps}\n                    additionalClasses='footer-link-list'\n                />\n            </div>\n            \n            <FooterAuthor />\n        </footer>\n    )\n}\n","import React from 'react'\n\nexport default function FooterAuthor() {\n    return (\n        <address role=\"contentinfo\" >\n            Nathan Larkin\n            <a href=\"mailto:nlarkin.us@gmail.com\">nlarkin.us@gmail.com</a>\n            <a href=\"tel:+17045334302\">(704) 533-4302</a>\n            <a href=\" www.linkedin.com/in/nalarkin\">LinkedIn</a>\n        </address>\n    )\n}\n","import React from 'react'\n\ninterface FooterCompanyProps {\n    company: string,\n    content: string,\n    \n}\n\nexport default function FooterCompany({company, content}: FooterCompanyProps) {\n    return (\n        <div className='footer-company'>\n            {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n            <div id='footer-company-text'>\n                {company}\n            </div>\n            <div id='footer-content-text'>\n                {content}\n            </div>\n                \n            \n        </div>\n    )\n}\n","import React from 'react'\nimport { v4 as uuidv4 } from 'uuid';\n// import HeaderTitle from './HeaderTitle';\n// import LinkGroup from './LinkGroup';\nimport {LinkGroup, HeaderTitle} from './index';\n\n\nexport default function Header() {\n    const linkGroupProps = [\n        {\n            key: uuidv4(),\n            text: 'Home',\n            location: '',\n            size: 'X-Small',\n            additionalClassNames: 'header-link'\n        },\n        {\n            key: uuidv4(),\n            text: 'History',\n            location: 'history',\n            size: 'X-Small',\n            additionalClassNames: 'header-link'\n        },\n        {\n            key: uuidv4(),\n            text: 'Compare',\n            location: 'compare',\n            size: 'X-Small',\n            additionalClassNames: 'header-link'\n        },\n        {\n            key: uuidv4(),\n            text: 'About',\n            location: 'about',\n            size: 'X-Small',\n            additionalClassNames: 'header-link'\n        },\n    ]\n    return (\n        <header id='app-header'>\n            <div id='app-header-title'>\n                <HeaderTitle \n                    title='Cryptox' \n                />\n            </div>\n            \n            <div className='header-link-container'>\n                <LinkGroup\n                    title=''\n                    childrenLinkProps={linkGroupProps}\n                    additionalClasses='header-link-list'\n                />\n            </div>\n           \n            \n        </header>\n    )\n}\n","import React from 'react'\n\ninterface props {\n    title: string,\n}\n\nexport default function HeaderTitle({title}: props) {\n    return (\n        <div>\n            {title}\n        </div>\n    )\n}\n","import React from 'react'\n\n\n\nexport default function HistoryPage() {\n    return (\n        <main id='HistoryPage'>\n            <h1>\n                History \n            </h1>\n\n        </main>\n    )\n}\n","import React from 'react'\nimport { NavigationLinkProps } from '../interfaces';\nimport {NavigationLink} from './index';\n// import NavigationLink from './NavigationLink';\n\ninterface LinkGroupProps {\n    title: string,\n    childrenLinkProps: NavigationLinkProps[],\n    additionalClasses?: string,\n}\n\n\n\nexport default function LinkGroup({title, childrenLinkProps, additionalClasses}:LinkGroupProps) {\n    // const curr = \n    const classesForLink = `link-list ${additionalClasses ? ` ${additionalClasses}` : ''}`;\n    return (\n        <div className='link-group'>\n            {\n                title && <div className='link-group-title X-Small'>\n                {title}\n                </div>\n            }\n            <div className={classesForLink}>\n                {childrenLinkProps.map(({key, location, text, size, additionalClassNames}: NavigationLinkProps) => \n                    \n                    <NavigationLink\n                        key={key}\n                        location={location} \n                        text={text}\n                        size={size}\n                        additionalClassNames={additionalClassNames}\n                    />\n                    \n                    \n                )\n                }\n            </div>\n            \n        </div>\n    )\n}\n","import React from 'react'\nimport { NavLink } from \"react-router-dom\";\nimport { NavigationLinkProps } from '../interfaces';\n\n\nexport default function NavigationLink({text, location, size, additionalClassNames}: NavigationLinkProps) {\n    const classesForLink = `nav-link ${size}${additionalClassNames ? ` ${additionalClassNames}` : ''}`;\n\n    return (\n        <NavLink \n            exact\n            to={`/${location}`}\n            activeClassName='selected'\n            className={classesForLink}\n            activeStyle={{\n                // color: \"yellow\"\n            }}>\n            {text}\n        </NavLink>\n    );\n}\n","import React from 'react'\n\n\n\n\ninterface ConversionProps {\n    initial: string;\n}\n\n\n\nexport default function ConversionInput({initial}: ConversionProps) {\n    const bitCoinValue = 51891.10;\n    const [cryptoValue, updateCryptoValue] = React.useState<string>(initial);\n    const initialCurrency = (parseFloat(initial) * bitCoinValue).toString();\n    const [currencyValue, updateCurrencyValue] = React.useState<string>(initialCurrency);\n    // const [childA, updateChildA] = React.useState<string>('BTC');\n    // const [childB, updateChildB] = React.useState<string>('USD');\n    const childA = 'BTC';\n    const childB = 'USD';\n    \n    \n    \n\n    // function handleChange(name: string, val: string) {\n    //     if (/^[-+]?(\\d+|Infinity)$/.test(val)) {\n    //         const numberVal = parseInt(val);\n    //         if (name === 'crypto') {\n    //             updateCurrencyValue(val);\n    //             // math here\n    //         } else {\n    //             updateCryptoValue(val);\n    //             // math here\n    //         }\n    //     }\n        \n\n    //     // updateValue(val);\n    // }\n\n    function cryptoToCurrency(e: React.ChangeEvent<HTMLInputElement>) {\n        const newValue = e.target.value;\n        if (/^\\d+\\.?\\d*|\\.?\\d+$/.test(newValue)) {\n            updateCryptoValue(newValue);\n            const floatValue = parseFloat(newValue);\n            const newString = (floatValue * bitCoinValue).toString();\n            updateCurrencyValue(newString);\n        } else if (newValue.length === 0 || newValue === '.') {\n            // give user error\n            updateCryptoValue(newValue);\n            updateCurrencyValue(newValue);\n        }\n        \n       \n    }\n    function currencyToCrypto(e: React.ChangeEvent<HTMLInputElement>) {\n        const newValue = e.target.value;\n        // update ui of user typed input\n        updateCurrencyValue(newValue);\n        // update other box based on calc\n       \n        if (/^\\d+\\.?\\d*|\\.?\\d+$/.test(newValue)) {\n            const floatValue = parseFloat(newValue);\n            const newString = (floatValue / bitCoinValue).toString();\n            updateCryptoValue(newString);\n            //\n        } else {\n            // give user error\n        }\n        \n    }\n\n    return (\n        <div id='converter-input'>\n            <div className='currency-header currency-grid-1-1'><h2>{childA}</h2></div>\n            <div className='currency-header currency-grid-1-2'><h2>{childB}</h2></div>\n            <input \n                className='currency-grid-2-1'\n                name={childA}\n                type=\"text\" \n                value={cryptoValue} \n                onChange={cryptoToCurrency} \n            />        \n            \n            <input \n                className='currency-grid-2-2'\n                name={childB}\n                type=\"text\" \n                value={currencyValue} \n                onChange={currencyToCrypto} \n            />        \n        </div>\n        \n    );\n}\n\n\n// import React from 'react';\n// import { Formik, Field, Form, useField, useFormikContext } from 'formik';\n// // import { StringMappingType } from 'typescript';\n\n// interface FieldProps {\n//     name: string,\n// }\n\n// interface ContextProps {\n//     textA: string,\n//     textB: string,\n//     touched: {},\n//     setFieldValue: () => void,\n// }\n\n\n// const MyField = (props: FieldProps) => {\n//   const {\n//     values: { textA, textB },\n//     touched,\n//     setFieldValue,\n//   } = useFormikContext<ContextProps>();\n//   const [field, meta] = useField(props);\n\n//   React.useEffect(() => {\n//     // set the value of textC, based on textA and textB\n//     if (\n//       textA.trim() !== '' &&\n//       textB.trim() !== '' \n//     //   (touched.textA || touched.textB)\n//     ) {\n//       setFieldValue(props.name, `textA: ${textA}, textB: ${textB}`);\n//     }\n//     // only run if any of the below changes\n//   }, [textB, textA, touched.textA, touched.textB, setFieldValue, props.name]);\n\n//   return (\n//     <>\n//       <input {...props} {...field} />\n//       {!!meta.touched && !!meta.error && <div>{meta.error}</div>}\n//     </>\n//   );\n// };\n\n// function ConversionInput() {\n//   // Note that we provide initalValues all 3 fields.\n//   const initialValues = { textA: 'a', textB: 'yepb', textC: '' };\n//   return (\n//     <div className=\"App\">\n//       <Formik\n//         initialValues={initialValues}\n//         onSubmit={async (values) => alert(JSON.stringify(values, null, 2))}\n//       >\n//         <div className=\"section\">\n//           <h1>Dependent Formik Field Example</h1>\n//           <p style={{ color: '#555' }}>\n//             This is an example of how to set the value of one field based on the\n//             current values of other fields in Formik v2. In form below, textC's\n//             value is set based on the current values of fields textA and textB.\n//           </p>\n//           <div>\n//             <small>\n//               <em>\n//                 Instructions: enter values for textA, and textB, and then watch\n//                 textC.\n//               </em>\n//             </small>\n//           </div>\n//           <Form>\n//             <label>\n//               textA\n//               <Field name=\"textA\" />\n//             </label>\n//             <label>\n//               textB\n//               <Field name=\"textB\" />\n//             </label>\n//             <label>\n//               textC\n//               <MyField name=\"textC\" />\n//             </label>\n//             {/* <button type=\"submit\">Submit</button> */}\n//           </Form>\n//         </div>\n//       </Formik>\n//       <div style={{ marginTop: 16 }}>\n//         Notice the following:\n//         <ul>\n//           <li>\n//             textC's value is set after fields textA and textB have been touched\n//             and if they are not empty.\n//           </li>\n//           <li>\n//             textC is <i>still</i> editable after being set programmatically.\n//             However, the value will be overwritten if/whenever there are (new)\n//             changes to textA and textB. This is because of the dependency array\n//             in our custom field's React.useEffect; it only runs when textA or\n//             textB change or have been touched. Since Formik's `setFieldValue` is\n//             equivalent between renders and so is the field's name prop, this\n//             works as expected. You could alter this overrwriting behavior by\n//             keeping track of whether textC was been updated by field.onChange or\n//             useEffect. This might be very useful if you want to alert the end\n//             user that their changes to textC will be lost.\n//           </li>\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// }\n\n// // const rootElement = document.getElementById('root');\n// // ReactDOM.render(<App />, rootElement);\n\n// export default ConversionInput;","import React from 'react'\nimport { ConversionInput } from './index';\n\n\nexport default function HomePage() {\n    return (\n        <main id='HomePage'>\n            <h1>Home Page</h1>\n            <ConversionInput initial='1'/>\n        </main>\n    )\n}\n","// import React from \"react\";\nimport {Switch,Route} from \"react-router-dom\";\n\n\nimport React from 'react';\nimport './style/App.css';\nimport HomePage from './components/HomePage';\nimport Footer from './components/Footer';\nimport AboutPage from './components/AboutPage';\nimport HistoryPage from './components/HistoryPage';\nimport ComparePage from \"./components/ComparePage\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Header />\n        <Switch> \n            <Route path='/about'>\n                <AboutPage />\n            </Route>\n            <Route path='/history'>\n                <HistoryPage />\n            </Route>\n            <Route path='/compare'>\n                <ComparePage />\n            </Route>\n\n            <Route path='/'>\n                <HomePage />\n            </Route>\n        </Switch>\n        <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport  {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}