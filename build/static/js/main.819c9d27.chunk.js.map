{"version":3,"sources":["components/AboutPage.tsx","features/graph/data.ts","features/graph/theme.ts","components/ComparePage.tsx","features/footer/Footer.tsx","features/footer/FooterAuthor.tsx","features/footer/FooterCompany.tsx","features/navbar/Header.tsx","features/navbar/HeaderTitle.tsx","app/hooks.ts","features/counter/counterAPI.ts","features/counter/counterSlice.ts","features/counter/Counter.tsx","components/HistoryPage.tsx","components/LinkGroup.tsx","components/NavigationLink.tsx","features/conversion/ConversionInput.tsx","features/graph/LineGraph.tsx","components/HomePage.tsx","features/hamburger/HamburgerMenu.tsx","App.tsx","reportWebVitals.ts","features/hamburger/hamburgerSlice.ts","app/store.ts","index.tsx"],"names":["AboutPage","id","data","getTheme","map","Map","set","ComparePage","className","theme","Footer","linkGroupProps","key","uuidv4","text","location","size","additionalClassNames","FooterCompany","company","content","LinkGroup","title","childrenLinkProps","additionalClasses","FooterAuthor","role","href","target","rel","Header","HeaderTitle","useAppSelector","useSelector","fetchCount","amount","Promise","resolve","setTimeout","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","selectCount","counter","Counter","count","dispatch","useDispatch","useState","incrementAmount","setIncrementAmount","incrementValue","Number","aria-label","onClick","onChange","e","getState","HistoryPage","classesForLink","NavigationLink","exact","to","activeClassName","ConversionInput","initial","bitCoinValue","React","cryptoValue","updateCryptoValue","initialCurrency","parseFloat","toString","currencyValue","updateCurrencyValue","type","newValue","test","newString","length","darkTheme","MyResponsiveLine","margin","top","right","bottom","left","xScale","yScale","min","max","stacked","reverse","yFormat","axisTop","axisRight","curve","lineWidth","axisBottom","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","pointSize","pointColor","pointBorderWidth","pointBorderColor","from","pointLabelYOffset","useMesh","legends","itemTextColor","get","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground","HomePage","HamburgerMenu","menuIsOpen","setMenuIsOpen","handleLinkClick","prev","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","menuSlice","close","open","toggle","store","configureStore","reducer","counterReducer","menu","hamburgerReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAGe,SAASA,IACpB,OACI,sBAAMC,GAAG,YAAT,SACI,gDCNL,IAAMC,EAAO,CAChB,CACE,GAAM,QACN,MAAS,qBACT,KAAQ,CACN,CACE,EAAK,QACL,EAAK,IAEP,CACE,EAAK,aACL,EAAK,KAEP,CACE,EAAK,OACL,EAAK,KAEP,CACE,EAAK,QACL,EAAK,KAEP,CACE,EAAK,SACL,EAAK,IAEP,CACE,EAAK,MACL,EAAK,KAEP,CACE,EAAK,MACL,EAAK,IAEP,CACE,EAAK,OACL,EAAK,KAEP,CACE,EAAK,UACL,EAAK,KAEP,CACE,EAAK,QACL,EAAK,KAEP,CACE,EAAK,aACL,EAAK,KAEP,CACE,EAAK,SACL,EAAK,OAIX,CACE,GAAM,SACN,MAAS,qBACT,KAAQ,CACN,CACE,EAAK,QACL,EAAK,IAEP,CACE,EAAK,aACL,EAAK,IAEP,CACE,EAAK,OACL,EAAK,KAEP,CACE,EAAK,QACL,EAAK,KAEP,CACE,EAAK,SACL,EAAK,KAEP,CACE,EAAK,MACL,EAAK,KAEP,CACE,EAAK,MACL,EAAK,KAEP,CACE,EAAK,OACL,EAAK,KAEP,CACE,EAAK,UACL,EAAK,KAEP,CACE,EAAK,QACL,EAAK,KAEP,CACE,EAAK,aACL,EAAK,IAEP,CACE,EAAK,SACL,EAAK,OAIX,CACE,GAAM,KACN,MAAS,qBACT,KAAQ,CACN,CACE,EAAK,QACL,EAAK,KAEP,CACE,EAAK,aACL,EAAK,KAEP,CACE,EAAK,OACL,EAAK,IAEP,CACE,EAAK,QACL,EAAK,KAEP,CACE,EAAK,SACL,EAAK,KAEP,CACE,EAAK,MACL,EAAK,KAEP,CACE,EAAK,MACL,EAAK,IAEP,CACE,EAAK,OACL,EAAK,KAEP,CACE,EAAK,UACL,EAAK,KAEP,CACE,EAAK,QACL,EAAK,KAEP,CACE,EAAK,aACL,EAAK,KAEP,CACE,EAAK,SACL,EAAK,OAIX,CACE,GAAM,UACN,MAAS,qBACT,KAAQ,CACN,CACE,EAAK,QACL,EAAK,IAEP,CACE,EAAK,aACL,EAAK,IAEP,CACE,EAAK,OACL,EAAK,KAEP,CACE,EAAK,QACL,EAAK,KAEP,CACE,EAAK,SACL,EAAK,KAEP,CACE,EAAK,MACL,EAAK,IAEP,CACE,EAAK,MACL,EAAK,KAEP,CACE,EAAK,OACL,EAAK,KAEP,CACE,EAAK,UACL,EAAK,KAEP,CACE,EAAK,QACL,EAAK,IAEP,CACE,EAAK,aACL,EAAK,IAEP,CACE,EAAK,SACL,EAAK,MAIX,CACE,GAAM,SACN,MAAS,qBACT,KAAQ,CACN,CACE,EAAK,QACL,EAAK,IAEP,CACE,EAAK,aACL,EAAK,IAEP,CACE,EAAK,OACL,EAAK,IAEP,CACE,EAAK,QACL,EAAK,KAEP,CACE,EAAK,SACL,EAAK,KAEP,CACE,EAAK,MACL,EAAK,KAEP,CACE,EAAK,MACL,EAAK,KAEP,CACE,EAAK,OACL,EAAK,GAEP,CACE,EAAK,UACL,EAAK,KAEP,CACE,EAAK,QACL,EAAK,IAEP,CACE,EAAK,aACL,EAAK,KAEP,CACE,EAAK,SACL,EAAK,QC3QR,SAASC,IACZ,IAAMC,EAAM,IAAIC,IAQhB,OALAD,EAAIE,IAAI,kBAAkB,WAC1BF,EAAIE,IAAI,oBAAoB,WAC5BF,EAAIE,IAAI,kBAAkB,WAC1BF,EAAIE,IAAI,mBAAmB,WAEpBF,ECJI,SAASG,IACpB,OACI,uBAAMN,GAAG,cAAT,UACI,uDACA,qBAAKO,UAAU,2BAAf,kDACA,qBAAKA,UAAU,OAAf,SACA,cAAC,EAAD,CAAkBN,KAAMA,EAAMO,MAAON,W,aCHlC,SAASO,IACpB,IAAMC,EAAiB,CACnB,CACIC,IAAKC,cACLC,KAAM,OACNC,SAAU,GACVC,KAAM,UACNC,qBAAsB,qBAE1B,CACIL,IAAKC,cACLC,KAAM,UACNC,SAAU,UACVC,KAAM,UACNC,qBAAsB,qBAE1B,CACIL,IAAKC,cACLC,KAAM,UACNC,SAAU,UACVC,KAAM,UACNC,qBAAsB,qBAE1B,CACIL,IAAKC,cACLC,KAAM,QACNC,SAAU,QACVC,KAAM,UACNC,qBAAsB,UAG9B,OACI,yBAAQT,UAAU,4DAAlB,UACI,gCACA,cAACU,EAAD,CACIC,QAAQ,UACRC,QAAQ,yBAEZ,qBAAKZ,UAAU,0CAAf,SACI,cAACa,EAAD,CACIC,MAAM,QACNC,kBAAmBZ,EACnBa,kBAAkB,8BAK1B,cAACC,EAAD,OCrDG,SAASA,IACpB,OAEI,aADA,CACA,WAASC,KAAK,cAAelB,UAAU,qBAAvC,SACI,sBAAKA,UAAU,QAAf,2BACkB,uBACd,oBAAGmB,KAAK,8BAA8BnB,UAAU,GAAhD,kCAAwE,0BACxE,oBAAGmB,KAAK,mBAAR,4BAA0C,0BAC1C,mBAAGA,KAAK,uCAAuCC,OAAO,SAASC,IAAI,aAAnE,2BCFD,SAASX,EAAT,GAAgE,IAAxCC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,QAC5C,OACI,sBAAKZ,UAAU,sBAAf,UACI,qBAAKP,GAAG,sBAAsBO,UAAU,GAAxC,SACKW,IAEL,qBAAKlB,GAAG,sBAAsBO,UAAU,gBAAxC,SACKY,OCRF,SAASU,IACpB,IAAMnB,EAAiB,CACnB,CACIC,IAAKC,cACLC,KAAM,OACNC,SAAU,GACVC,KAAM,UACNC,qBAAsB,eAE1B,CACIL,IAAKC,cACLC,KAAM,UACNC,SAAU,UACVC,KAAM,UACNC,qBAAsB,eAE1B,CACIL,IAAKC,cACLC,KAAM,UACNC,SAAU,UACVC,KAAM,UACNC,qBAAsB,eAE1B,CACIL,IAAKC,cACLC,KAAM,QACNC,SAAU,QACVC,KAAM,UACNC,qBAAsB,gBAG9B,OACI,sBAAKhB,GAAG,aAAaO,UAAU,2BAA/B,UACI,cAACuB,EAAD,CACIT,MAAM,YAEV,qBAAKd,UAAU,UAAf,SACA,cAACa,EAAD,CACIC,MAAM,GACNC,kBAAmBZ,EACnBa,kBAAkB,6BCzCnB,SAASO,EAAT,GAAsC,IAAhBT,EAAe,EAAfA,MACjC,OACI,qBAAKd,UAAU,8BAAf,SACKc,I,mBCJAU,EAAkDC,I,iCCJxD,SAASC,IAAwB,IAAbC,EAAY,uDAAH,EAClC,OAAO,IAAIC,SAA0B,SAACC,GAAD,OACnCC,YAAW,kBAAMD,EAAQ,CAAEnC,KAAMiC,MAAW,QCMhD,IAUaI,EAAiBC,YAC5B,qBAD4C,uCAE5C,WAAOL,GAAP,eAAAM,EAAA,sEACyBP,EAAWC,GADpC,cACQO,EADR,yBAGSA,EAASxC,MAHlB,2CAF4C,uDASjCyC,EAAeC,YAAY,CACtCC,KAAM,UACNC,aArBiC,CACjCC,MAAO,EACPC,OAAQ,QAqBRC,SAAU,CACRC,UAAW,SAACC,GAKVA,EAAMJ,OAAS,GAEjBK,UAAW,SAACD,GACVA,EAAMJ,OAAS,GAGjBM,kBAAmB,SAACF,EAAOG,GACzBH,EAAMJ,OAASO,EAAOC,UAK1BC,cAAe,SAACC,GACdA,EACGC,QAAQnB,EAAeoB,SAAS,SAACR,GAChCA,EAAMH,OAAS,aAEhBU,QAAQnB,EAAeqB,WAAW,SAACT,EAAOG,GACzCH,EAAMH,OAAS,OACfG,EAAMJ,OAASO,EAAOC,c,EAK6BZ,EAAakB,QAAzDX,E,EAAAA,UAAWE,E,EAAAA,UAAWC,E,EAAAA,kBAKxBS,EAAc,SAACX,GAAD,OAAsBA,EAAMY,QAAQhB,OAchDJ,IAAf,QCrEO,SAASqB,IACd,IAAMC,EAAQjC,EAAe8B,GACvBI,EHV4BC,cGQV,EAGsBC,mBAAS,KAH/B,mBAGjBC,EAHiB,KAGAC,EAHA,KAKlBC,EAAiBC,OAAOH,IAAoB,EAElD,OACE,sBAAK7D,UAAU,6CAAf,UACI,qBAAKA,UAAU,cAAf,8GACF,sBAAKA,UAAU,GAAf,UACE,wBACEA,UAAU,kDAEViE,aAAW,kBACXC,QAAS,kBAAMR,EAASd,MAJ1B,eAQA,+BAAOa,IACP,wBACYzD,UAAU,4CAEpBiE,aAAW,kBACXC,QAAS,kBAAMR,EAAShB,MAJ1B,kBASF,gCACE,uBACI1C,UAAU,sCACZiE,aAAW,uBACX1B,MAAOsB,EACPM,SAAU,SAACC,GAAD,OAAON,EAAmBM,EAAEhD,OAAOmB,UAE/C,uBACA,wBACAvC,UAAU,uCACRkE,QAAS,kBAAMR,EAASb,EAAkBkB,KAF5C,wBAMA,wBACI/D,UAAU,oCACZkE,QAAS,kBAAMR,EAAS3B,EAAegC,KAFzC,uBAMA,wBACY/D,UAAU,uCAEpBkE,QAAS,kBAAMR,GDOM/B,ECPkBoC,EDOW,SAC1DL,EACAW,GAEqBf,EAAYe,KACd,IAAM,GACvBX,EAASb,EAAkBlB,OAND,IAACA,GCVvB,8BCxDO,SAAS2C,IACpB,OACI,uBAAM7E,GAAG,cAAT,UACI,yCAGA,qBAAKO,UAAU,GAAf,SACI,cAACwD,EAAD,SCCD,SAAS3C,EAAT,GAAkF,IAA9DC,EAA6D,EAA7DA,MAAOC,EAAsD,EAAtDA,kBAAmBC,EAAmC,EAAnCA,kBAEnDuD,EAAc,oBAAgBvD,EAAiB,WAAOA,GAAsB,IAClF,OACI,sBAAKhB,UAAU,uBAAf,UAEQc,GAAS,qBAAKd,UAAU,2BAAf,SACRc,IAGL,qBAAKd,UAAWuE,EAAhB,SACKxD,EAAkBnB,KAAI,gBAAEQ,EAAF,EAAEA,IAAKG,EAAP,EAAOA,SAAUD,EAAjB,EAAiBA,KAAME,EAAvB,EAAuBA,KAAMC,EAA7B,EAA6BA,qBAA7B,OAEnB,cAAC+D,EAAD,CAEIjE,SAAUA,EACVD,KAAMA,EACNE,KAAMA,EACNC,qBAAsBA,GAJjBL,W,YCtBd,SAASoE,EAAT,GAA4F,IAAnElE,EAAkE,EAAlEA,KAAMC,EAA4D,EAA5DA,SAAUC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,qBACpD8D,EAAc,mBAAe/D,GAAf,OAAsBC,EAAoB,WAAOA,GAAyB,IAE9F,OACI,cAAC,IAAD,CACIgE,OAAK,EACLC,GAAE,WAAMnE,GACRoE,gBAAgB,WAChB3E,UAAWuE,EAJf,SAMKjE,ICJE,SAASsE,EAAT,GAAsD,IAA5BC,EAA2B,EAA3BA,QAC/BC,EAAe,QAD2C,EAEvBC,IAAMnB,SAAiBiB,GAFA,mBAEzDG,EAFyD,KAE5CC,EAF4C,KAG1DC,GAAmBC,WAAWN,GAAWC,GAAcM,WAHG,EAInBL,IAAMnB,SAAiBsB,GAJJ,mBAIzDG,EAJyD,KAI1CC,EAJ0C,KA0ChE,OACI,sBAAK7F,GAAG,kBAAkBO,UAAU,+CAApC,UAEI,qBAAKA,UAAU,sGAAf,SAAqH,6BAtC9G,UAuCP,qBAAKA,UAAU,yFAAf,SAAwG,6BAtCjG,UAuCP,uBACIA,UAAU,+GACVqC,KA1CG,MA2CHkD,KAAK,OACLhD,MAAOyC,EACPb,SA1CZ,SAA0BC,GACtB,IAAMoB,EAAWpB,EAAEhD,OAAOmB,MAC1B,GAAI,qBAAqBkD,KAAKD,GAAW,CACrCP,EAAkBO,GAClB,IACME,GADaP,WAAWK,GACEV,GAAcM,WAC9CE,EAAoBI,QACO,IAApBF,EAASG,QAA6B,MAAbH,IAEhCP,EAAkBO,GAClBF,EAAoBE,OAmCpB,uBACIxF,UAAU,iHACVqC,KAjDG,MAkDHkD,KAAK,OACLhD,MAAO8C,EACPlB,SAnCZ,SAA0BC,GACtB,IAAMoB,EAAWpB,EAAEhD,OAAOmB,MAK1B,GAHA+C,EAAoBE,GAGhB,qBAAqBC,KAAKD,GAAW,CACrC,IACME,GADaP,WAAWK,GACEV,GAAcM,WAC9CH,EAAkBS,U,aCZxBE,EAAY,CACd,WAAc,UACd,UAAa,UACb,SAAY,GACZ,KAAQ,CACJ,OAAU,CACN,KAAQ,CACJ,OAAU,UACV,YAAe,IAGvB,MAAS,CACL,KAAQ,CACJ,OAAU,UACV,YAAe,KAI3B,KAAQ,CACJ,KAAQ,CACJ,OAAU,UACV,YAAe,KAqDdC,EAAmB,SAAC,GAAD,IAAGnG,EAAH,EAAGA,KAAMO,EAAT,EAASA,MAAT,OAI5B,aAFA,CAEC,IAAD,CACIA,MAAO2F,EACPlG,KAAMA,EACNoG,OAAQ,CAAEC,IAAK,GAAIC,MAAO,IAAKC,OAAQ,GAAIC,KAAM,IACjDC,OAAQ,CAAEZ,KAAM,SAChBa,OAAQ,CAAEb,KAAM,SAAUc,IAAK,OAAQC,IAAK,OAAQC,SAAS,EAAMC,SAAS,GAC5EC,QAAQ,SACRC,QAAS,KACTC,UAAW,KACXC,MAAM,UACNC,UAAW,EACXC,WAAY,CACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,eACRC,aAAc,GACdC,eAAgB,UAEpBC,SAAY,CAERN,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,eACRC,cAAe,GACfC,eAAgB,UAGpBE,UAAW,GACXC,WAAY,CAAEtH,MAAO,cACrBuH,iBAAkB,EAClBC,iBAAkB,CAAEC,KAAM,cAC1BC,mBAAoB,GACpBC,SAAS,EACTC,QAAS,CACL,CACIC,cAAe7H,EAAM8H,IAAI,mBACzBC,OAAQ,eACRC,UAAW,SACXC,SAAS,EACTC,WAAY,IACZC,WAAY,EACZC,aAAc,EACdC,cAAe,gBACfC,UAAW,GACXC,WAAY,GACZC,YAAa,IACbC,WAAY,GACZC,YAAa,SACbC,kBAAmB,oBACnBC,QAAS,CACL,CACIC,GAAI,QACJC,MAAO,CACHC,eAAgB/I,EAAM8H,IAAI,mBAC1BU,YAAa,UCnK1B,SAASQ,IACpB,OACI,uBAAMxJ,GAAG,WAAWO,UAAU,IAA9B,UACI,oBAAIA,UAAU,IAAd,uBACA,qBAAKA,UAAU,wBAAf,SACI,cAAC4E,EAAD,CAAiBC,QAAQ,WC+B1B,SAASqE,IAAgB,MAGAtF,oBAAS,GAHT,mBAG7BuF,EAH6B,KAGjBC,EAHiB,KAiBpC,SAASC,IACLD,GAAc,GASlB,OAEI,cADA,CACA,OAAKpJ,UAAS,uBAAd,UACE,wBAAQkE,QAPd,WACIkF,GAAc,SAAAE,GAAI,OAAKA,MAMrB,SAA8BH,EAAa,QAAU,SAGrD,oBAAInJ,UAAS,oEAA+DmJ,EAAa,YAAc,IAAvG,SACA,sBAAKnJ,UAAU,wCAAf,UACE,qBAAKA,UAAU,iBAAf,SACI,cAAC,IAAD,CACQyE,OAAK,EACLC,GAAE,OACFC,gBAAgB,WAChBT,QAASmF,EACTrJ,UAAS,GALjB,oBAWJ,qBAAKA,UAAU,iBAAf,SACI,cAAC,IAAD,CACoByE,OAAK,EACLC,GAAE,UACFC,gBAAgB,WAChBT,QAASmF,EACTrJ,UAAS,GAL7B,uBAWJ,qBAAKA,UAAU,iBAAf,SACI,cAAC,IAAD,CACIyE,OAAK,EACLC,GAAE,UACFC,gBAAgB,WAChBT,QAASmF,EACTrJ,UAAS,GALb,uBAUJ,qBAAKA,UAAU,iBAAf,SACI,cAAC,IAAD,CACIyE,OAAK,EACLC,GAAE,QACFC,gBAAgB,WAChBT,QAASmF,EACTrJ,UAAS,GALb,6BC3DDuJ,MArCf,WACE,OAGM,cAFF,CAEE,OAAK9J,GAAI,MAAMO,UAAU,4DAAzB,UACI,sBAAKA,UAAU,GAAf,UACI,cAACkJ,EAAD,IACJ,cAAC5H,EAAD,OAGA,qBAAKtB,UAAU,aAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOwJ,KAAK,SAAZ,SACI,cAAChK,EAAD,MAEJ,cAAC,IAAD,CAAOgK,KAAK,WAAZ,SACI,cAAClF,EAAD,MAEJ,cAAC,IAAD,CAAOkF,KAAK,WAAZ,SACI,cAACzJ,EAAD,MAGJ,cAAC,IAAD,CAAOyJ,KAAK,IAAZ,SACI,cAACP,EAAD,WAIZ,qBAAKjJ,UAAU,OAAf,SACA,cAACE,EAAD,UC7BGuJ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCIDQ,EAAY9H,YAAY,CACnCC,KAAM,OACNC,aAPiC,CACjCC,OAAO,EACPC,OAAQ,UAORC,SAAU,CACR0H,MAAO,SAACxH,GAKNA,EAAMJ,OAAQ,GAEhB6H,KAAM,SAACzH,GACLA,EAAMJ,OAAQ,GAGhB8H,OAAQ,SAAC1H,GACPA,EAAMJ,OAASI,EAAMJ,U,EAiBY2H,EAAU7G,QAQlC6G,G,EARAC,M,EAAOC,K,EAAMC,OAQbH,EAAf,SClDaI,EAAQC,YAAe,CAClCC,QAAS,CACLjH,QAASkH,EACTC,KAAMC,KCEZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,IAAD,UACI,cAAC,EAAD,UAKVS,SAASC,eAAe,SAM1BvB,M","file":"static/js/main.819c9d27.chunk.js","sourcesContent":["import React from 'react'\n\n\nexport default function AboutPage() {\n    return (\n        <main id='AboutPage'>\n            <h1> About Me :)</h1>\n        </main>\n    )\n}\n","export const data = [\n    {\n      \"id\": \"japan\",\n      \"color\": \"hsl(223, 70%, 50%)\",\n      \"data\": [\n        {\n          \"x\": \"plane\",\n          \"y\": 57\n        },\n        {\n          \"x\": \"helicopter\",\n          \"y\": 147\n        },\n        {\n          \"x\": \"boat\",\n          \"y\": 244\n        },\n        {\n          \"x\": \"train\",\n          \"y\": 222\n        },\n        {\n          \"x\": \"subway\",\n          \"y\": 75\n        },\n        {\n          \"x\": \"bus\",\n          \"y\": 158\n        },\n        {\n          \"x\": \"car\",\n          \"y\": 71\n        },\n        {\n          \"x\": \"moto\",\n          \"y\": 120\n        },\n        {\n          \"x\": \"bicycle\",\n          \"y\": 199\n        },\n        {\n          \"x\": \"horse\",\n          \"y\": 262\n        },\n        {\n          \"x\": \"skateboard\",\n          \"y\": 294\n        },\n        {\n          \"x\": \"others\",\n          \"y\": 184\n        }\n      ]\n    },\n    {\n      \"id\": \"france\",\n      \"color\": \"hsl(300, 70%, 50%)\",\n      \"data\": [\n        {\n          \"x\": \"plane\",\n          \"y\": 27\n        },\n        {\n          \"x\": \"helicopter\",\n          \"y\": 21\n        },\n        {\n          \"x\": \"boat\",\n          \"y\": 144\n        },\n        {\n          \"x\": \"train\",\n          \"y\": 145\n        },\n        {\n          \"x\": \"subway\",\n          \"y\": 202\n        },\n        {\n          \"x\": \"bus\",\n          \"y\": 264\n        },\n        {\n          \"x\": \"car\",\n          \"y\": 276\n        },\n        {\n          \"x\": \"moto\",\n          \"y\": 165\n        },\n        {\n          \"x\": \"bicycle\",\n          \"y\": 138\n        },\n        {\n          \"x\": \"horse\",\n          \"y\": 211\n        },\n        {\n          \"x\": \"skateboard\",\n          \"y\": 23\n        },\n        {\n          \"x\": \"others\",\n          \"y\": 134\n        }\n      ]\n    },\n    {\n      \"id\": \"us\",\n      \"color\": \"hsl(109, 70%, 50%)\",\n      \"data\": [\n        {\n          \"x\": \"plane\",\n          \"y\": 118\n        },\n        {\n          \"x\": \"helicopter\",\n          \"y\": 101\n        },\n        {\n          \"x\": \"boat\",\n          \"y\": 34\n        },\n        {\n          \"x\": \"train\",\n          \"y\": 152\n        },\n        {\n          \"x\": \"subway\",\n          \"y\": 168\n        },\n        {\n          \"x\": \"bus\",\n          \"y\": 235\n        },\n        {\n          \"x\": \"car\",\n          \"y\": 85\n        },\n        {\n          \"x\": \"moto\",\n          \"y\": 227\n        },\n        {\n          \"x\": \"bicycle\",\n          \"y\": 167\n        },\n        {\n          \"x\": \"horse\",\n          \"y\": 284\n        },\n        {\n          \"x\": \"skateboard\",\n          \"y\": 283\n        },\n        {\n          \"x\": \"others\",\n          \"y\": 210\n        }\n      ]\n    },\n    {\n      \"id\": \"germany\",\n      \"color\": \"hsl(124, 70%, 50%)\",\n      \"data\": [\n        {\n          \"x\": \"plane\",\n          \"y\": 72\n        },\n        {\n          \"x\": \"helicopter\",\n          \"y\": 35\n        },\n        {\n          \"x\": \"boat\",\n          \"y\": 177\n        },\n        {\n          \"x\": \"train\",\n          \"y\": 292\n        },\n        {\n          \"x\": \"subway\",\n          \"y\": 286\n        },\n        {\n          \"x\": \"bus\",\n          \"y\": 40\n        },\n        {\n          \"x\": \"car\",\n          \"y\": 286\n        },\n        {\n          \"x\": \"moto\",\n          \"y\": 195\n        },\n        {\n          \"x\": \"bicycle\",\n          \"y\": 245\n        },\n        {\n          \"x\": \"horse\",\n          \"y\": 12\n        },\n        {\n          \"x\": \"skateboard\",\n          \"y\": 55\n        },\n        {\n          \"x\": \"others\",\n          \"y\": 28\n        }\n      ]\n    },\n    {\n      \"id\": \"norway\",\n      \"color\": \"hsl(239, 70%, 50%)\",\n      \"data\": [\n        {\n          \"x\": \"plane\",\n          \"y\": 30\n        },\n        {\n          \"x\": \"helicopter\",\n          \"y\": 80\n        },\n        {\n          \"x\": \"boat\",\n          \"y\": 16\n        },\n        {\n          \"x\": \"train\",\n          \"y\": 174\n        },\n        {\n          \"x\": \"subway\",\n          \"y\": 238\n        },\n        {\n          \"x\": \"bus\",\n          \"y\": 228\n        },\n        {\n          \"x\": \"car\",\n          \"y\": 189\n        },\n        {\n          \"x\": \"moto\",\n          \"y\": 8\n        },\n        {\n          \"x\": \"bicycle\",\n          \"y\": 115\n        },\n        {\n          \"x\": \"horse\",\n          \"y\": 22\n        },\n        {\n          \"x\": \"skateboard\",\n          \"y\": 112\n        },\n        {\n          \"x\": \"others\",\n          \"y\": 199\n        }\n      ]\n    }\n  ]","export function getTheme(): Map<string, string> {\n    const map = new Map();\n\n\n    map.set('legendTextColor','#C8D2E0')\n    map.set('symbolBorderColor','#939DAB')\n    map.set('hoverBackground','#1F2937')\n    map.set('pointBorderColor','#939DAB')\n   \n    return map;\n}\n\n","import React from 'react'\nimport {MyResponsiveLine} from '../features/index';\nimport {data} from '../features/graph/data';\nimport {getTheme} from '../features/graph/theme';\n\nexport default function ComparePage() {\n    return (\n        <main id='ComparePage'>\n            <h1> Compare prices here.</h1>\n            <div className='text-xs mb-5 text-center'>Graph below is for testing purposes.</div>\n            <div className='h-96'>\n            <MyResponsiveLine data={data} theme={getTheme()} />\n            </div>\n            \n        </main>\n\n    )\n}\n","import React from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n// import FooterAuthor from './FooterAuthor';\r\n// import FooterCompany from './FooterCompany';\r\n// import LinkGroup from './LinkGroup';\r\nimport { FooterAuthor, FooterCompany, LinkGroup } from '../index';\r\n\r\n\r\nexport default function Footer() {\r\n    const linkGroupProps = [\r\n        {\r\n            key: uuidv4(),\r\n            text: 'Home',\r\n            location: '',\r\n            size: 'X-Small',\r\n            additionalClassNames: 'footer-link w-min'\r\n        },\r\n        {\r\n            key: uuidv4(),\r\n            text: 'History',\r\n            location: 'history',\r\n            size: 'X-Small',\r\n            additionalClassNames: 'footer-link w-min'\r\n        },\r\n        {\r\n            key: uuidv4(),\r\n            text: 'Compare',\r\n            location: 'compare',\r\n            size: 'X-Small',\r\n            additionalClassNames: 'footer-link w-min'\r\n        },\r\n        {\r\n            key: uuidv4(),\r\n            text: 'About',\r\n            location: 'about',\r\n            size: 'X-Small',\r\n            additionalClassNames: 'w-min'\r\n        },\r\n    ]\r\n    return (\r\n        <footer className='mr-5 w-full mt-10 grid grid-flow-col text-left text-base '>\r\n            <div>\r\n            <FooterCompany \r\n                company='Cryptox' \r\n                content='Mission statement...'\r\n            />\r\n            <div className='footer-link-container justify-self-left'>\r\n                <LinkGroup\r\n                    title='Links'\r\n                    childrenLinkProps={linkGroupProps}\r\n                    additionalClasses='flex flex-col w-min '\r\n                />\r\n            </div>\r\n            </div>\r\n            \r\n            <FooterAuthor />\r\n           \r\n            \r\n        </footer>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function FooterAuthor() {\r\n    return (\r\n        //ml-5w-min justify-self-end\r\n        <address role=\"contentinfo\"  className='text-right ml-auto'>\r\n            <div className='w-min'>\r\n                Nathan Larkin <br />\r\n                <a href=\"mailto:nlarkin.us@gmail.com\" className=''>nlarkin.us@gmail.com <br /></a>\r\n                <a href=\"tel:+17045334302\">(704) 533-4302 <br /></a>\r\n                <a href=\"https://www.linkedin.com/in/nalarkin\" target=\"_blank\" rel='noreferrer'>LinkedIn</a>\r\n            </div>\r\n            \r\n        </address>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\ninterface FooterCompanyProps {\r\n    company: string,\r\n    content: string,\r\n    \r\n}\r\n\r\nexport default function FooterCompany({company, content}: FooterCompanyProps) {\r\n    return (\r\n        <div className='footer-company mb-5'>\r\n            <div id='footer-company-text' className=''>\r\n                {company}\r\n            </div>\r\n            <div id='footer-content-text' className='text-gray-500'>\r\n                {content}\r\n            </div>\r\n                \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n// import HeaderTitle from './HeaderTitle';\r\n// import LinkGroup from './LinkGroup';\r\nimport {LinkGroup, HeaderTitle} from '../index';\r\n\r\n\r\nexport default function Header() {\r\n    const linkGroupProps = [\r\n        {\r\n            key: uuidv4(),\r\n            text: 'Home',\r\n            location: '',\r\n            size: 'X-Small',\r\n            additionalClassNames: 'header-link'\r\n        },\r\n        {\r\n            key: uuidv4(),\r\n            text: 'History',\r\n            location: 'history',\r\n            size: 'X-Small',\r\n            additionalClassNames: 'header-link'\r\n        },\r\n        {\r\n            key: uuidv4(),\r\n            text: 'Compare',\r\n            location: 'compare',\r\n            size: 'X-Small',\r\n            additionalClassNames: 'header-link'\r\n        },\r\n        {\r\n            key: uuidv4(),\r\n            text: 'About',\r\n            location: 'about',\r\n            size: 'X-Small',\r\n            additionalClassNames: 'header-link'\r\n        },\r\n    ]\r\n    return (\r\n        <nav id='app-header' className='flex-row hidden md:flex '>\r\n            <HeaderTitle \r\n                title='Cryptox' \r\n            />\r\n            <div className='ml-auto'>\r\n            <LinkGroup\r\n                title=''\r\n                childrenLinkProps={linkGroupProps}\r\n                additionalClasses='space-x-5 text-2xl '\r\n            />\r\n            </div>\r\n            \r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\ninterface props {\r\n    title: string,\r\n}\r\n\r\nexport default function HeaderTitle({title}: props) {\r\n    return (\r\n        <div className='text-3xl text-gray-200 mr-5'>\r\n            {title}\r\n        </div>\r\n    )\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './counterAPI';\n\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import React, { useState } from 'react';\n\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  incrementIfOdd,\n  selectCount,\n} from './counterSlice';\n\nexport function Counter() {\n  const count = useAppSelector(selectCount);\n  const dispatch = useAppDispatch();\n  const [incrementAmount, setIncrementAmount] = useState('2');\n\n  const incrementValue = Number(incrementAmount) || 0;\n\n  return (\n    <div className='text-xs mx-auto  flex text-center flex-col'>\n        <div className='text-center'>This is a protopye of the counter app for redux state manamgent. Using to prove redux works atm.</div>\n      <div className=''>\n        <button\n          className='border-2 my-3 ml-auto mr-5 rounded-lg p-2 ml-36'\n\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n        <span>{count}</span>\n        <button\n                    className='border-2 my-3 ml-5 mr-auto rounded-lg p-2'\n\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())}\n        >\n          +\n        </button>\n      </div>\n      <div>\n        <input\n            className='text-black w-20 text-center mx-auto'\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(e.target.value)}\n        />\n        <br />\n        <button\n        className='border-2 my-3 ml-auto rounded-lg p-2'\n          onClick={() => dispatch(incrementByAmount(incrementValue))}\n        >\n          Add Amount\n        </button>\n        <button\n            className='border-2 my-3 mx-3 rounded-lg p-2'\n          onClick={() => dispatch(incrementAsync(incrementValue))}\n        >\n          Add Async\n        </button>\n        <button\n                    className='border-2 my-3 mr-auto rounded-lg p-2'\n\n          onClick={() => dispatch(incrementIfOdd(incrementValue))}\n        >\n          Add If Odd\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react'\nimport { Counter } from '../features/counter/Counter';\n\n\n\nexport default function HistoryPage() {\n    return (\n        <main id='HistoryPage'>\n            <h1>\n                History \n            </h1>\n            <div className=''>\n                <Counter />\n            </div>\n            \n\n        </main>\n    )\n}\n","import React from 'react'\r\nimport { NavigationLinkProps } from '../interfaces';\r\nimport {NavigationLink} from '../features/index';\r\n// import NavigationLink from './NavigationLink';\r\n\r\ninterface LinkGroupProps {\r\n    title: string,\r\n    childrenLinkProps: NavigationLinkProps[],\r\n    additionalClasses?: string,\r\n}\r\n\r\n\r\n\r\nexport default function LinkGroup({title, childrenLinkProps, additionalClasses}:LinkGroupProps) {\r\n    // const curr = \r\n    const classesForLink = `link-list ${additionalClasses ? ` ${additionalClasses}` : ''}`;\r\n    return (\r\n        <div className='link-group text-left'>\r\n            {\r\n                title && <div className='link-group-title X-Small'>\r\n                {title}\r\n                </div>\r\n            }\r\n            <div className={classesForLink}>\r\n                {childrenLinkProps.map(({key, location, text, size, additionalClassNames}: NavigationLinkProps) => \r\n                    \r\n                    <NavigationLink\r\n                        key={key}\r\n                        location={location} \r\n                        text={text}\r\n                        size={size}\r\n                        additionalClassNames={additionalClassNames}\r\n                    />\r\n                    \r\n                    \r\n                )\r\n                }\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\nimport { NavLink } from \"react-router-dom\";\nimport { NavigationLinkProps } from '../interfaces';\n\n\nexport default function NavigationLink({text, location, size, additionalClassNames}: NavigationLinkProps) {\n    const classesForLink = `nav-link ${size}${additionalClassNames ? ` ${additionalClassNames}` : ''}`;\n\n    return (\n        <NavLink \n            exact\n            to={`/${location}`}\n            activeClassName='selected'\n            className={classesForLink}\n            >\n            {text}\n        </NavLink>\n    );\n}\n","import React from 'react'\r\n\r\n\r\n\r\n\r\ninterface ConversionProps {\r\n    initial: string;\r\n}\r\n\r\n\r\n\r\nexport default function ConversionInput({initial}: ConversionProps) {\r\n    const bitCoinValue = 51891.10;\r\n    const [cryptoValue, updateCryptoValue] = React.useState<string>(initial);\r\n    const initialCurrency = (parseFloat(initial) * bitCoinValue).toString();\r\n    const [currencyValue, updateCurrencyValue] = React.useState<string>(initialCurrency);\r\n    // const [childA, updateChildA] = React.useState<string>('BTC');\r\n    // const [childB, updateChildB] = React.useState<string>('USD');\r\n    const childA = 'BTC';\r\n    const childB = 'USD';\r\n\r\n    function cryptoToCurrency(e: React.ChangeEvent<HTMLInputElement>) {\r\n        const newValue = e.target.value;\r\n        if (/^\\d+\\.?\\d*|\\.?\\d+$/.test(newValue)) {\r\n            updateCryptoValue(newValue);\r\n            const floatValue = parseFloat(newValue);\r\n            const newString = (floatValue * bitCoinValue).toString();\r\n            updateCurrencyValue(newString);\r\n        } else if (newValue.length === 0 || newValue === '.') {\r\n            // give user error\r\n            updateCryptoValue(newValue);\r\n            updateCurrencyValue(newValue);\r\n        }\r\n        \r\n       \r\n    }\r\n    function currencyToCrypto(e: React.ChangeEvent<HTMLInputElement>) {\r\n        const newValue = e.target.value;\r\n        // update ui of user typed input\r\n        updateCurrencyValue(newValue);\r\n        // update other box based on calc\r\n       \r\n        if (/^\\d+\\.?\\d*|\\.?\\d+$/.test(newValue)) {\r\n            const floatValue = parseFloat(newValue);\r\n            const newString = (floatValue / bitCoinValue).toString();\r\n            updateCryptoValue(newString);\r\n            //\r\n        } else {\r\n            // give user error\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div id='converter-input' className='grid grid-cols-12 grid-rows-12 font-semibold'>\r\n\r\n            <div className='col-start-1 col-end-7 row-start-1 row-end-3 grid flex-shrink place-self-center justify-self-center '><h2>{childA}</h2></div>\r\n            <div className='col-start-7 col-end-13 row-start-1 row-end-3 place-self-center md:justify-self-center '><h2>{childB}</h2></div>\r\n            <input \r\n                className='col-start-2 col-end-6 row-start-3 row-end-13 text-black text-center text-xl mt-5 p-2 rounded-lg bg-gray-300 '\r\n                name={childA}\r\n                type=\"text\" \r\n                value={cryptoValue} \r\n                onChange={cryptoToCurrency} \r\n            />        \r\n            \r\n            <input \r\n                className='col-start-8 col-end-12 row-start-3 row-end-13  text-black text-center text-xl mt-5 p-2 rounded-lg bg-gray-300 '\r\n                name={childB}\r\n                type=\"text\" \r\n                value={currencyValue} \r\n                onChange={currencyToCrypto} \r\n            />        \r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\n\r\n// import React from 'react';\r\n// import { Formik, Field, Form, useField, useFormikContext } from 'formik';\r\n// // import { StringMappingType } from 'typescript';\r\n\r\n// interface FieldProps {\r\n//     name: string,\r\n// }\r\n\r\n// interface ContextProps {\r\n//     textA: string,\r\n//     textB: string,\r\n//     touched: {},\r\n//     setFieldValue: () => void,\r\n// }\r\n\r\n\r\n// const MyField = (props: FieldProps) => {\r\n//   const {\r\n//     values: { textA, textB },\r\n//     touched,\r\n//     setFieldValue,\r\n//   } = useFormikContext<ContextProps>();\r\n//   const [field, meta] = useField(props);\r\n\r\n//   React.useEffect(() => {\r\n//     // set the value of textC, based on textA and textB\r\n//     if (\r\n//       textA.trim() !== '' &&\r\n//       textB.trim() !== '' \r\n//     //   (touched.textA || touched.textB)\r\n//     ) {\r\n//       setFieldValue(props.name, `textA: ${textA}, textB: ${textB}`);\r\n//     }\r\n//     // only run if any of the below changes\r\n//   }, [textB, textA, touched.textA, touched.textB, setFieldValue, props.name]);\r\n\r\n//   return (\r\n//     <>\r\n//       <input {...props} {...field} />\r\n//       {!!meta.touched && !!meta.error && <div>{meta.error}</div>}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// function ConversionInput() {\r\n//   // Note that we provide initalValues all 3 fields.\r\n//   const initialValues = { textA: 'a', textB: 'yepb', textC: '' };\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <Formik\r\n//         initialValues={initialValues}\r\n//         onSubmit={async (values) => alert(JSON.stringify(values, null, 2))}\r\n//       >\r\n//         <div className=\"section\">\r\n//           <h1>Dependent Formik Field Example</h1>\r\n//           <p style={{ color: '#555' }}>\r\n//             This is an example of how to set the value of one field based on the\r\n//             current values of other fields in Formik v2. In form below, textC's\r\n//             value is set based on the current values of fields textA and textB.\r\n//           </p>\r\n//           <div>\r\n//             <small>\r\n//               <em>\r\n//                 Instructions: enter values for textA, and textB, and then watch\r\n//                 textC.\r\n//               </em>\r\n//             </small>\r\n//           </div>\r\n//           <Form>\r\n//             <label>\r\n//               textA\r\n//               <Field name=\"textA\" />\r\n//             </label>\r\n//             <label>\r\n//               textB\r\n//               <Field name=\"textB\" />\r\n//             </label>\r\n//             <label>\r\n//               textC\r\n//               <MyField name=\"textC\" />\r\n//             </label>\r\n//             {/* <button type=\"submit\">Submit</button> */}\r\n//           </Form>\r\n//         </div>\r\n//       </Formik>\r\n//       <div style={{ marginTop: 16 }}>\r\n//         Notice the following:\r\n//         <ul>\r\n//           <li>\r\n//             textC's value is set after fields textA and textB have been touched\r\n//             and if they are not empty.\r\n//           </li>\r\n//           <li>\r\n//             textC is <i>still</i> editable after being set programmatically.\r\n//             However, the value will be overwritten if/whenever there are (new)\r\n//             changes to textA and textB. This is because of the dependency array\r\n//             in our custom field's React.useEffect; it only runs when textA or\r\n//             textB change or have been touched. Since Formik's `setFieldValue` is\r\n//             equivalent between renders and so is the field's name prop, this\r\n//             works as expected. You could alter this overrwriting behavior by\r\n//             keeping track of whether textC was been updated by field.onChange or\r\n//             useEffect. This might be very useful if you want to alert the end\r\n//             user that their changes to textC will be lost.\r\n//           </li>\r\n//         </ul>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// // const rootElement = document.getElementById('root');\r\n// // ReactDOM.render(<App />, rootElement);\r\n\r\n// export default ConversionInput;","// install (please make sure versions match peerDependencies)\n// yarn add @nivo/core @nivo/line\nimport { ResponsiveLine } from '@nivo/line'\n\n\n\n\n// theme.set()\n// const lightTheme = {\n//     \"background\": \"#ffffff\",\n//     \"textColor\": \"#333333\",\n//     \"fontSize\": 11,\n//     \"axis\": {\n//         \"domain\": {\n//             \"line\": {\n//                 \"stroke\": \"#777777\",\n//                 \"strokeWidth\": 1\n//             }\n//         },\n//         \"ticks\": {\n//             \"line\": {\n//                 \"stroke\": \"#777777\",\n//                 \"strokeWidth\": 1\n//             }\n//         }\n//     },\n//     \"grid\": {\n//         \"line\": {\n//             \"stroke\": \"#dddddd\",\n//             \"strokeWidth\": 1\n//         }\n//     }\n// }\nconst darkTheme = {\n    \"background\": \"#091321\",\n    \"textColor\": \"#C8D2E0\",\n    \"fontSize\": 13,\n    \"axis\": {\n        \"domain\": {\n            \"line\": {\n                \"stroke\": \"#9BA5B3\",\n                \"strokeWidth\": 1\n            }\n        },\n        \"ticks\": {\n            \"line\": {\n                \"stroke\": \"#798391\",\n                \"strokeWidth\": 1\n            }\n        }\n    },\n    \"grid\": {\n        \"line\": {\n            \"stroke\": \"#C8D2E0\",\n            \"strokeWidth\": 1\n        }\n    }\n}\n\n\n\n\n\n\n// interface AxisPropss  {\n//     orient: string,\n//     tickSize: number,\n//     tickPadding: number,\n//     tickRotation: number,\n//     legend: string,\n//     legendOffset: number,\n//     legendPosition: string\n// }\n\n\ninterface DataProps {\n    theme: Map<string, string>,\n\n    data: {\n        id: string;\n        color: string;\n        data: {\n            x: string,\n            y: number\n        }[];\n      }[];\n}\n\n\n// interface AxisProps<Value extends AxisValue = any> {\n//     ticksPosition?: 'before' | 'after';\n//     tickValues?: TicksSpec<Value>;\n//     tickSize?: number;\n//     tickPadding?: number;\n//     tickRotation?: number;\n//     format?: string | ValueFormatter<Value>;\n//     renderTick?: (props: AxisTickProps<Value>) => JSX.Element;\n//     legend?: React.ReactNode;\n//     legendPosition?: AxisLegendPosition;\n//     legendOffset?: number;\n//     ariaHidden?: boolean;\n\n// make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\nexport const MyResponsiveLine = ({ data, theme }: DataProps) => (\n   \n    // enableSlices = true;   // create a slice across x or y \n\n    <ResponsiveLine\n        theme={darkTheme}\n        data={data}\n        margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n        xScale={{ type: 'point' }}\n        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n        yFormat=\" >-.2f\"\n        axisTop={null}\n        axisRight={null}\n        curve='natural'\n        lineWidth={2}\n        axisBottom={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'y axis label',\n            legendOffset: 36,\n            legendPosition: 'middle',\n        }}\n        axisLeft = {{\n            // colors: theme.get('itemTextColor') as string,\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'x axis lable',\n            legendOffset: -40,\n            legendPosition: 'middle'\n        }}\n        \n        pointSize={10}\n        pointColor={{ theme: 'background' }}\n        pointBorderWidth={2}\n        pointBorderColor={{ from: 'serieColor' }}\n        pointLabelYOffset={-12}\n        useMesh={true}\n        legends={[\n            {\n                itemTextColor: theme.get('legendTextColor') as string,\n                anchor: 'bottom-right',\n                direction: 'column',\n                justify: false,\n                translateX: 100,\n                translateY: 0,\n                itemsSpacing: 0,\n                itemDirection: 'left-to-right',\n                itemWidth: 80,\n                itemHeight: 20,\n                itemOpacity: 0.75,\n                symbolSize: 12,\n                symbolShape: 'circle',\n                symbolBorderColor: 'rgba(0, 0, 0, .5)',\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemBackground: theme.get('hoverBackground'),\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n            }\n        ]}\n    />\n)","import React from 'react'\r\nimport { ConversionInput } from '../features/index';\r\n\r\n\r\nexport default function HomePage() {\r\n    return (\r\n        <main id='HomePage' className=' '>\r\n            <h1 className=' '>Home Page</h1>\r\n            <div className=' text-center  mx-auto'>\r\n                <ConversionInput initial='1'/>\r\n            </div>\r\n            \r\n        </main>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\nimport {NavLink} from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n// import { JsxAttributeLike, JsxElement } from 'typescript';\n// import { useAppSelector, useAppDispatch } from '../../app/hooks';\n// import { useDebounce } from './Debounce';\n// import {\n//   close,\n//   open,\n//   toggle,\n//   selectMenuValue\n// } from './hamburgerSlice';\n\n\n\n// const menuLinks = [\n//     {\n//         key: 0,\n//         text: 'Home',\n//         location: '',\n//     },\n//     {\n//         key: 1,\n//         text: 'History',\n//         location: 'history',\n//     },\n//     {\n//         key: 2,\n//         text: 'Compare',\n//         location: 'compare',\n//     },\n//     {\n//         key: 3,\n//         text: 'About',\n//         location: 'about',\n//     },\n// ]\n\n\n\nexport default function HamburgerMenu() {\n    // const menuIsOpen = useAppSelector(selectMenuValue);\n    // const dispatch = useAppDispatch();\n    const [menuIsOpen, setMenuIsOpen] = useState(false);\n    \n    // function handleMenuClick() {\n    //     dispatch(toggle());\n    // }\n\n    // function openMenu() {\n    //     dispatch(open());\n    // }\n    \n    // function handleLinkClick() {\n    //     dispatch(close());\n    // }\n\n    function handleLinkClick() {\n        setMenuIsOpen(false);\n    }\n    // function openMenu() {\n    //     setMenuIsOpen(true);\n    // }\n    function toggleMenu() {\n        setMenuIsOpen(prev => !prev);\n    }\n\n    return (\n        // nav and navBar\n        <nav className={`fixed z-10 md:hidden`}>\n          <button onClick={toggleMenu}>{menuIsOpen ? \"Close\" : \"Menu\"}</button>\n\n          {/* menunav + (if navbar open => showMenu) */}\n          <ul className={`overflow-y-scroll fixed h-screen w-0 overflow-hidden z-20 ${menuIsOpen ? 'w-96 h-96' : ''}`}>\n          <div className='flex flex-col bg-gray-800 border-b-2 '>\n            <div className='my-10 text-3xl'>\n                <NavLink \n                        exact\n                        to={`home`}\n                        activeClassName='selected'\n                        onClick={handleLinkClick}\n                        className={``}\n                    >\n                    {`Home`}\n                </NavLink>\n            </div>\n               \n            <div className='my-10 text-3xl'>\n                <NavLink \n                                    exact\n                                    to={`history`}\n                                    activeClassName='selected'\n                                    onClick={handleLinkClick}\n                                    className={``}\n                                >\n                                {`History`}\n                            </NavLink>\n            </div>\n               \n            <div className='my-10 text-3xl'>\n                <NavLink \n                    exact\n                    to={`compare`}\n                    activeClassName='selected'\n                    onClick={handleLinkClick}\n                    className={``}\n                >\n                {`Compare`}\n                </NavLink>\n            </div>\n            <div className='my-10 text-3xl'>\n                <NavLink \n                    exact\n                    to={`about`}\n                    activeClassName='selected'\n                    onClick={handleLinkClick}\n                    className={``}\n                >\n                {`About`}\n            </NavLink>\n            </div>\n            </div>\n          </ul>\n          \n          \n        </nav>\n      )\n}\n\n// return (\n//     // nav and navBar\n//     <nav className={`relative z-10 cursor-pointer`}>\n//       <button onClick={handleToggle}>{navbarOpen ? \"Close\" : \"Open\"}</button>\n\n//       {/* menunav + (if navbar open => showMenu) */}\n//       <ul className={`overflow-y-scroll fixed h-screen w-0 overflow-hidden z-20 ${navbarOpen ? 'w-96 h-96' : ''}`}>\n//       <div className='mt-5 ml-5 bg-blue-500 '>\n//         <button onClick={handleLinkClick}>Link/Button</button>\n//         </div>\n//       </ul>\n      \n      \n//     </nav>\n//   )\n\n\n// .navBar {\n//     position: relative;\n//   }\n  \n//   .navBar button {\n//     position: fixed;\n//     left: 40px;\n//     top: 40px;\n//     z-index: 10;\n//     cursor: pointer;\n//   }\n  \n//   .menuNav {\n//     overflow-y: scroll;\n//     list-style: none;\n//     position: fixed;\n//     top: 0;\n//     background: darkcyan;\n//     left: 0;\n//     bottom: 0;\n//     height: 100vh;\n//     width: 0;\n//     overflow: hidden;\n//     max-width: 290px;\n//     z-index: 9;\n//   }\n  \n//   .menuNav.showMenu {\n//     width: 100%;\n//   }\n  \n//   a {\n//     display: block;\n//     padding: 10px 40px;\n//     text-decoration: none;\n//     color: #3fffd2;\n//     text-transform: uppercase;\n//     font-weight: bold;\n//   }\n  \n//   .menuNav li:first-child {\n//     margin-top: 7rem;\n//   }","// import React from \"react\";\r\nimport {Switch,Route} from \"react-router-dom\";\r\n\r\n\r\nimport React from 'react';\r\n// import '../src/style/App.css';\r\n\r\nimport HomePage from './components/HomePage';\r\nimport Footer from './features/footer/Footer';\r\nimport AboutPage from './components/AboutPage';\r\nimport HistoryPage from './components/HistoryPage';\r\nimport ComparePage from \"./components/ComparePage\";\r\nimport {Header} from \"./features/index\";\r\nimport HamburgerMenu from './features/hamburger/HamburgerMenu';\r\n\r\nfunction App() {\r\n  return (\r\n      //bg-gray-800\r\n      // grid grid-rows-3 grid-rows-auto\r\n        <div id= 'app' className=\" text-gray-200 pt-10 px-7  md:pt-10 md:px-20 min-h-screen\">\r\n            <div className=''>\r\n                <HamburgerMenu />\r\n            <Header />\r\n            </div>\r\n            \r\n            <div className=' flex-grow'>\r\n                <Switch> \r\n                    <Route path='/about'>\r\n                        <AboutPage />\r\n                    </Route>\r\n                    <Route path='/history'>\r\n                        <HistoryPage />\r\n                    </Route>\r\n                    <Route path='/compare'>\r\n                        <ComparePage />\r\n                    </Route>\r\n\r\n                    <Route path='/'>\r\n                        <HomePage />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n            <div className='mb-5'>\r\n            <Footer />\r\n            </div>\r\n        \r\n        \r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { RootState} from '../../app/store';\n\nexport interface CounterState {\n  value: boolean;\n  status: 'closed' | 'open' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: false,\n  status: 'closed',\n};\n\nexport const menuSlice = createSlice({\n  name: 'menu',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    close: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value = false;\n    },\n    open: (state) => {\n      state.value = true;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    toggle: (state) => {\n      state.value = !state.value\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n//   extraReducers: (builder) => {\n//     builder\n//       .addCase(incrementAsync.pending, (state) => {\n//         state.status = 'loading';\n//       })\n//       .addCase(incrementAsync.fulfilled, (state, action) => {\n//         state.status = 'idle';\n//         state.value += action.payload;\n//       });\n//   },\n});\n\nexport const { close, open, toggle } = menuSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectMenuValue = (state: RootState) => state.menu.value;\n\n\nexport default menuSlice.reducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\nimport counterReducer from '../features/counter/counterSlice';\nimport hamburgerReducer from '../features/hamburger/hamburgerSlice';\n// ...\n\nexport const store = configureStore({\n  reducer: {\n      counter: counterReducer,\n      menu: hamburgerReducer,\n  }\n  \n})\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\n\n\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './style/App.css';\r\nimport '../src/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport  {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './app/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n      </Provider>\r\n        \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}